```css
[game] Da Hood

- [+] anti client-snitch tech (cancels banning connections and other stuff)
- [*] major modifications to anticheat disabler
- [+] target strafe
- [+] anti stomp
- [+] auto kill
- [+] renamed "code redeemer" -> redeemer
- [+] new targethud
- [+] moved coderedemer
- [+] ragebot
- [+] improved autoselect
- [+] view chat history
- [+] rapidfire now works without reseting
- [+] grouped autoselect and rage into their own categories
- [+] show desync 
- [+] wallcheck to autoselect
- [+] desync mode dropdowns (Custom, Truly Random, Up & Down, Very Random)
- [+] new desync visuals
- [+] destroy cheaters keybind
- [+] hotbar mods
- [+] noslow now gives inf energy
- [+] character chams
- [+] join small server
- [+] join large server
- [+] join (amount) count player serer
- [+] force target (ragebot)
- [+] rejoin btn
- [+] copy tp script (lets others without being your ROBLOX friend join you.)
- [+] hit detection
- [+] shoot detection
- [+] new event system so its easier for developers to code
- [+] silentaim
- [*] reworked gun firing on ragebot, autoselect
- [+] modes for autostomp
- [+] camera toggle (desync)
- [+] autostomp (tp) is now a mode (hover -> stomps the player, teleport -> teleport to any dead body found in the game and stomps the target)
- [+] inf range autoselect
- [+] inf range ragebot
- [*] csync desync rewrite

[game] bubblegum simulator infinity 

- [+] island tp
- [+] auto collect
- [+] island esp
- [+] auto enchant
- [+] auto craft potion
- [+] redeem all codes button
- [+] auto blow
- [+] auto use (potions, items, etc)
- [+] auto claim
- [+] auto delete
- [+] auto play minigames
- [+] auto sell
- [+] auto hatch
- [+] auto buy

[game] zombies rng

- [+] zombie chams
- [+] silent aim
- [+] gunmods (firerate, inf ammo)
- [+] closure finder (hyproxide's finder)
- [+] killaura

[other] universal

- [+] fixed health frame fucking up on edit
- [+] port esp
- [+] fly and speed's sliders now only show on toggle
- [+] speed modes (walkspeed, cframe, velocity)
- [*] fixed chams

[other] other changes

- [+] keybinds
- [+] custom fonts
- [+] keybind menu
- [+] the disabler now crashes on unload (dh)
- [+] the s in skyline is now the accent color
- [+] chatspammer
- [+] fixed installer not working on certain exploits
- [+] ui now appears after running script
- [+] you can now change the bind of the ui in settings
- [+] fix autoload
- [*] made everything lowercase
- [*] tons of bug fixes
- [*] everything toggles off now
- [*] improved esp
- [+] fly vertical speed

```
developers: [[outer]](<https://fakecrime.bio/outer>), [[xzxkw]](<https://fakecrime.bio/xzxkw>), and [[maxlasertech]](<https://guns.lol/maxlaser>)
Suggestions: @ilostazul and @mystickriver
Thank you for supporting Skyline, Skyline is now officially released.
